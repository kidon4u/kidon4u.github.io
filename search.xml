<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nexus(Maven)仓库搭建和常见问题</title>
      <link href="/2020/03/30/nexus-repo/"/>
      <url>/2020/03/30/nexus-repo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Nexus仓库管理器可用于maven/docker/npm/pypi/yum等相关组件的储存和管理，本文使用Docker + Nexus 3搭建仓库，并应用于maven项目</p></blockquote><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>只想着搭建Nexus仓库的朋友可以直接略过某些地方，比如这里。</p><h3 id="组件-Components"><a href="#组件-Components" class="headerlink" title="组件(Components)"></a>组件(Components)</h3><p>Nexus作为的多种构建工具仓库的管理器，不同工具的操作的对象不用，而在Nexus里统一称为<strong>组件</strong>。组件由<strong>坐标(coordinates)</strong>唯一确定，包括group，name和version。以Maven为例：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>fun.kidon<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> # 一般写开发团体</span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-project<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> # 项目的名字</span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span> # 版本</span><br></pre></td></tr></table></figure></div><p>以上三条信息在Maven中是必须的，通过它们就可以确定唯一组件(dependency或plugin)了，其中groupId和artifactId决定唯一的具体项目。</p><h3 id="资产-Assets"><a href="#资产-Assets" class="headerlink" title="资产(Assets)"></a>资产(Assets)</h3><p>与组件相关联的资源或是说文件，比如JAR组件中含有POM和JAR文件，甚至还有JavaDoc和源码文件。注意，资产并不只能是某组件独占的，它可以被共享，比如docker镜像的层，不同的镜像可以共享复用储存层。</p><h3 id="仓库-Repositories"><a href="#仓库-Repositories" class="headerlink" title="仓库(Repositories)"></a>仓库(Repositories)</h3><p>将某一类型的组件聚集起来就是仓库了，当然根据构建工具的差异，仓库格式和使用上也是不尽相同。</p><h2 id="Nexus3安装"><a href="#Nexus3安装" class="headerlink" title="Nexus3安装"></a>Nexus3安装</h2><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><ol><li>CPU:推荐个数8+，最好不少于4个</li><li>内存：jvm分配2703MB~4GB，宿主机8GB+</li><li>为了允许进行虚拟内存交换，未分配的主机内存的最小值应该不低于总物理RAM的1/3</li><li>最大堆+最大直接内存&lt;=主机的内存 * 2/3</li><li>磁盘：根据具体使用而定，推荐300GB+</li></ol><p>上面的是推荐配置，并不是硬性要求，当然你总不希望突然某天就全线飙红吧，更多配置要求参考 <a href="https://help.sonatype.com/repomanager3/system-requirements" target="_blank" rel="noopener">https://help.sonatype.com/repomanager3/system-requirements</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>这里使用docker安装</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker search nexus</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker pull sonatype/nexus3<span class="comment"># 拉取nexus3镜像</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p -m 776 /usr/<span class="built_in">local</span>/nexus3/nexus-data</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -d -p 8081:8081 --name nexus -v /usr/<span class="built_in">local</span>/nexus3/nexus-data:/nexus-data --restart=always -e NEXUS_CONTEXT=nexus sonatype/nexus3<span class="comment"># 运行容器，命名为nexus，如果容器运行在某些云平台加上--ulimit nofile=65536:65536 </span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker ps<span class="comment"># 查看是否启动成功</span></span></span><br></pre></td></tr></table></figure></div><p>如果一切顺利，那么在浏览器中输入ip:8081/nexus就可以看到Nexus的界面了。如果无法访问看看Nexus是否启动成功或检查下防火墙设置。</p><p>本文主要是使用Nexus作为Maven仓库，后续可能会扩展其他类型的仓库，比如docker registry、npm registry等。</p><h2 id="Maven仓库配置和管理"><a href="#Maven仓库配置和管理" class="headerlink" title="Maven仓库配置和管理"></a>Maven仓库配置和管理</h2><p>Maven repository支持<strong>Apache Maven</strong>, Apache Ant/Ivy, Eclipse Aether, <strong>Gradle</strong>等。</p><h3 id="了解私有仓库"><a href="#了解私有仓库" class="headerlink" title="了解私有仓库"></a>了解私有仓库</h3><p>要让私有仓库为你服务怎么也得知道它是如何工作的吧。先来看个图片：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/25/4h8P1zNgXWpoJcG.png" src="/img/loading.gif" class="lazyload"></a><p>这张图有几个简单的概念：本地仓库、私服、中央库。简单说本地仓库是你PC的某个目录；私服就是这里搭建的Nexus仓库；中央库是远程仓库之一。</p><p>我们会在Nexus仓库里面设置一些远程仓库的代理。查找依赖的流程是：如果本地仓库没有，则到私服寻找，如果私服也没有，它会到它代理的远程仓库里寻找（按照从上到下的优先级），找到后会在私服上储存一份，然后再下载到本地仓库。</p><p>而实际Maven的工作流程比这个可能要复杂，这个要看你具体的配置和使用了。</p><h3 id="Nexus上Maven仓库的配置-1"><a href="#Nexus上Maven仓库的配置-1" class="headerlink" title="Nexus上Maven仓库的配置^1"></a>Nexus上Maven仓库的配置<a href="https://help.sonatype.com/repomanager3/formats/maven-repositories" target="_blank" rel="noopener">^1</a></h3><p>用admin的账号登录之后，可以看到齿轮型的管理者按钮，点击它，出现的就是你能配置的所有东西了。</p><h4 id="仓库类型"><a href="#仓库类型" class="headerlink" title="仓库类型"></a>仓库类型</h4><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img sytle="zoom:70%" data-src="https://i.loli.net/2020/03/25/8IjU5YoZxVD4lpt.png" src="/img/loading.gif" class="lazyload"></a><p>可以看到仓库这一栏，Nexus默认为你配置了几个仓库，如果你感觉没用的可以删除。这里解释下仓库的类型：</p><ul><li>proxy:所代理的远程仓库，上面有介绍。</li><li>hosted:就是安装Nexus的宿主机上的仓库，类型有Release/Snapshot/Mixed，以后你上传的组件就放在hosted类型的仓库中，外部无法获取</li><li>group:可以包含其它仓库或者仓库组，通过一个url统一对外服务</li></ul><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>点击上图那个创建仓库的按钮，我们创建一个代理仓库：<a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/26/NPmLEae4blByOtX.png" src="/img/loading.gif" class="lazyload"></a></p><p>填入代理仓库三个主要的信息，还有其他的配置看说明即可明白，一般采用默认值即可：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/26/mRzdXh3F4xLsiUS.png" src="/img/loading.gif" class="lazyload"></a><p>点击最下方的创建按钮，即完成仓库的创建。</p><p>回到仓库页面，点击仓库组，即那个maven-public，然后把阿里云的maven代理移动到右边，并且往上移动，保存离开。<strong>依赖查询的顺序是根据从上到下的顺序进行的</strong>：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/26/NeLDRV3Aqpbnxsd.png" src="/img/loading.gif" class="lazyload"></a><p>稍后我会介绍如何在Maven项目中使用此私服仓库。</p><h3 id="常用Maven仓库"><a href="#常用Maven仓库" class="headerlink" title="常用Maven仓库"></a>常用Maven仓库</h3><table><thead><tr><th>仓库</th><th>url</th></tr></thead><tbody><tr><td>阿里云</td><td><a href="http://maven.aliyun.com/nexus/content/groups/public/" target="_blank" rel="noopener">http://maven.aliyun.com/nexus/content/groups/public/</a></td></tr><tr><td>camunda</td><td><a href="https://app.camunda.com/nexus/content/groups/public" target="_blank" rel="noopener">https://app.camunda.com/nexus/content/groups/public</a></td></tr><tr><td>spring.io</td><td><a href="http://repo.spring.io/release/" target="_blank" rel="noopener">http://repo.spring.io/release/</a></td></tr><tr><td>ibiblio</td><td><a href="http://www.ibiblio.org/maven2" target="_blank" rel="noopener">http://www.ibiblio.org/maven2</a></td></tr><tr><td>jboss</td><td><a href="http://repository.jboss.com/maven2/" target="_blank" rel="noopener">http://repository.jboss.com/maven2/</a></td></tr></tbody></table><p>其实，国内maven镜像虽然快，但是更新比较慢，国外的仓库由于国内网络的原因，下载简直不能忍，但是更新很快，可以根据自身的情况选择，有些人会花些钱开代理访问外网比较快，建议使用原装。</p><h3 id="浏览和查询"><a href="#浏览和查询" class="headerlink" title="浏览和查询"></a>浏览和查询</h3><p>这里写这个主要是想表明Nexus确实给我们提供了很方便的查询组件信息的方法，以后你开发的组件在这都可以看到。如果你仓库里还没有组件，那么接着往下小节看吧。</p><p>在这个页面主要是供用户浏览、查询或者上传组件，你可以在这页尽情探索：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/25/SAKYQfp4JecXodu.png" src="/img/loading.gif" class="lazyload"></a><p>可以看见组件所具有的资产(assets)和他们的信息及使用方法：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/25/d2BscCYvRfLM7ol.png" src="/img/loading.gif" class="lazyload"></a><p>如果通过restful api设置了tag也能看见：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/25/DR35OeJmiyLQV7g.png" src="/img/loading.gif" class="lazyload"></a><h3 id="清理策略-cleanup-policy"><a href="#清理策略-cleanup-policy" class="headerlink" title="清理策略(cleanup policy)"></a>清理策略(cleanup policy)</h3><p>最好是能设置自己的组件清理策略，以免不再使用的组件占据磁盘空间进而引发问题。<a href="https://help.sonatype.com/repomanager3/cleanup-policies" target="_blank" rel="noopener">戳我查看清理策略</a>。</p><h2 id="Maven项目里使用私有仓库"><a href="#Maven项目里使用私有仓库" class="headerlink" title="Maven项目里使用私有仓库"></a>Maven项目里使用私有仓库</h2><p>在项目中配置Maven仓库，主要有两种方式：一种是在Maven的<code>settings.xml</code>里配置（全局或用户级），这样每个项目都能共享此配置；一种是在每个项目里的<code>pom.xml</code>中单独配置。这里在settings.xml里配置：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-maven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>env-dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.204.128:8081/nexus/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.204.128:8081/nexus/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">releases</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--make the profile active all the time --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>env-dev<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>settings.xml</code>里每一项都都有简略的英文注释，不太多，可以好好看看。这里解释其中的几个：</p><ul><li><code>&lt;server/&gt;</code> 是提供给你的私服的认证信息的，这个在发布的时候需要使用，我们下面发布的时候会提到。注意，认证信息这里我们由于省事写了admin的账号，但是最好能分配一个开发者账号，Nexus提供了丰富的账号权限管理能力。</li><li><code>&lt;mirrors/&gt;</code> 简单说来就是某个远程仓库的镜像，这里其实可以不用写这配置，不过为了说明还是列出来了。<strong>注意:镜像的工作方式类似于拦截器，当远程仓库被镜像匹配到的(<code>&lt;mirrorOf/&gt;</code>)，请求被重定向到镜像仓库，获取 jar 包将从镜像仓库获取，而不是我们配置的repository仓库，repository将失去作用</strong>。</li><li><code>&lt;profiles/&gt;</code> 在这里我们可以为不同环境定制构建方式，我们的私有仓库就配置在这里，其中的仓库的<code>&lt;url/&gt;</code>就是Nexus的仓库组，还说明了此仓库用于release和snapshot版本。它的激活方式也是十分丰富，这里只用了其中一种，建议好好了解关于此配置项的内容，在多环境、CI/CD中会有作用。</li></ul><p>以上配置完成，清理你本地仓库里的组件，重新导入一次依赖，就能看见依赖都是从私有仓库导入的了，同时登陆私有仓库，也能在上面看见仓库里缓存了这些组件。下载完成，该说说上传了。</p><h3 id="项目发布至仓库"><a href="#项目发布至仓库" class="headerlink" title="项目发布至仓库"></a>项目发布至仓库</h3><p>在项目的<code>pom.xml</code>中加入发布和快照仓库的信息：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.204.128:8081/nexus/repository/maven-releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Snapshot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.204.128:8081/nexus/repository/maven-snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这里的neuxs作为id，同<code>settings.xml</code>里的<code>&lt;server/&gt;</code>id要一致，用户信息只能放在<code>settings.xml</code>中，用于提供认证。在Maven的deploy阶段，就能把项目发布到对应的仓库了。</p><p>执行<code>mvn clean deploy</code>，再到仓库里看看，我们的快照版本确实发布到了快照仓库了，这样你小伙伴的其他的项目就能通过坐标引用这个组件了：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/30/fk6DHuKb5GOUF3J.png" src="/img/loading.gif" class="lazyload"></a><p>那接下来简单说说Maven的发布和快照版本。</p><h3 id="Maven的Release版本与Snapshot版本"><a href="#Maven的Release版本与Snapshot版本" class="headerlink" title="Maven的Release版本与Snapshot版本"></a>Maven的Release版本与Snapshot版本</h3><ul><li><p>Release（发布）代表可靠、稳定、不再改变的版本</p></li><li><p>Snapshot（快照）代表不稳定、尚处于开发中、随时可变的版本。</p></li></ul><p>区分快照版本和发布版本只要看是否以<code>-SNAPSHOT</code>为结尾，注意这里要全大写。</p><p>由于发布和快照版本的特性，在我们的POM文件中，如果某依赖项是发布版本，若本地仓库已有就不会再去远程仓库下载；而如果是快照版本，那么即使本地仓库已有该版本，也会下载远程仓库里的来更新本地的。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>Maven仓库实际上储存的文件是没有限制的，你可以储存WAR、JAR、源码、Ruby libraries等。Maven仓库中组件通过POM阐述。当Maven下载一个组件(dependency or plugin)时，对应组件的POM文件也会被下载，所有记录在此POM的组件也将被下载，如此反复，直到下载完所有依赖的组件。</p><p>有个小技巧，Maven是通过url使用http来下载的，比如从仓库下载fun.kidon开发的my-project项目的1.2.1-RELEASE版本那么url为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../fun/kidon/my-project/1.2.1-RELEASE.jar</span><br></pre></td></tr></table></figure></div><p>同时POM文件也会被下载下来：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../fun/kidon/my-project/1.2.1-RELEASE.pom</span><br></pre></td></tr></table></figure></div><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h2><ol><li><p>centos8中docker容器内dns无法工作？</p><p>这个是firewalld的问题，启用ip地址伪装就可以正常工作：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-masquerade --permanent</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></div><p>更多的firewalld设置可以查看<a href="/2020/03/10/firewalld/">这里</a>。</p></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Nexus仓库确实提供了很多丰富强大的功能，有很多这里并未涉及，比如restful api、定时任务、权限管理等。我们创建了Maven仓库并在项目中使用了它。除了组件管理，在未来Nexus仓库结合构建工具(Apache Maven等)可作为CI/CD中重要的一环参与生产实践，到时候就能扩大其价值了。之后应该还会涉及几个议题。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://help.sonatype.com/repomanager3" target="_blank" rel="noopener">https://help.sonatype.com/repomanager3</a></p><p><a href="http://maven.apache.org/guides/mini/guide-mirror-settings.html" target="_blank" rel="noopener">http://maven.apache.org/guides/mini/guide-mirror-settings.html</a></p><p><a href="https://www.xncoding.com/2017/09/02/tool/nexus.html" target="_blank" rel="noopener">https://www.xncoding.com/2017/09/02/tool/nexus.html</a></p><p><a href="https://www.javatt.com/p/87942" target="_blank" rel="noopener">https://www.javatt.com/p/87942</a></p><p><a href="https://www.jianshu.com/p/94b060e016a2" target="_blank" rel="noopener">https://www.jianshu.com/p/94b060e016a2</a></p><p><a href="https://swenfang.github.io/2018/06/03/Maven-Priority/" target="_blank" rel="noopener">https://swenfang.github.io/2018/06/03/Maven-Priority/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 8防火墙firewalld配置、管理与实践</title>
      <link href="/2020/03/10/firewalld/"/>
      <url>/2020/03/10/firewalld/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>前言： 最近用docker在新机器（CentOS 8）上运行容器，但是外部的访问进不来，容器内的dns解析也无法工作。</p></blockquote><p><em>在本文中，将展示如何为您的CentOS 8设置防火墙，并在<code>firewall-cmd</code>管理工具的帮助下进行管理。</em></p><h2 id="防火墙firewalld"><a href="#防火墙firewalld" class="headerlink" title="防火墙firewalld"></a>防火墙<code>firewalld</code></h2><p><strong>防火墙</strong>是被用于从不信任的流量中保护工作站或者服务器的机制，它通过定义一组安全规则来工作，这些安全规则确定是允许还是阻止特定流量，正确配置的防火墙是整个系统安全的最重要方面之一，<strong>CentOS 8提供了一个动态的、可定制的、基于主机的、带有D-Bus接口的防火墙——<code>firewalld</code></strong>。在CentOS 8中，<code>nftables</code>取代<code>iptables</code>成为默认的Linux网络包过滤框架，中间采取daemon动态管理防火墙，管理工具是<code>firewalld</code>。也就是说，<code>firewalld</code>只是一个前端管理工具，它负责配置规则，真正起作用的是后面的过滤框架。</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:70%" data-src="https://i.loli.net/2020/03/10/6Si5vcJ7Anpqwjg.png" src="/img/loading.gif" class="lazyload"></a><p><code>firewalld</code>其实在CentOS 7中就已经存在，可能大多数人更习惯于<code>iptables</code>。<code>iptables</code>里默认是每个服务是允许，需要拒绝的才去限制。而与<code>iptables</code>相反，<strong><code>firewalld</code>默认是拒绝</strong>，需要放行的服务需要去设置。<code>firewalld</code>和<code>iptables</code>还有很多区别，这里不展开说来，有兴趣的同学请戳☞<a href="https://firewalld.org/" target="_blank" rel="noopener">firewalld官网</a>或者自行去了解。</p><p>要配置防火墙，<strong>你必须以root或者具有<code>sudo</code>权限的用户的身份登录</strong>。<code>firewalld</code>可以通过<code>firewall-cmd</code>命令行工具和图形化工具<code>firewll-config</code>等来配置和管理，本文均采用命令行的方式叙述。</p><p>首先确定<code>firewalld</code>是运行着：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --state <span class="comment"># firewalld的状态，启动为`running`，未启动为`not running`</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果发现firewall基于某些原因没有安装或者启动:</span></span><br><span class="line">yum install firewalld firewall-config # 安装firewalld，其中firewall-config是图形界面，可以选择不安装</span><br><span class="line">systemctl start  firewalld # 启动</span><br><span class="line">systemctl stop firewalld  # 停止</span><br><span class="line">systemctl enable firewalld # 启用自动启动</span><br><span class="line">systemctl disable firewalld # 禁用自动启动</span><br><span class="line">systemctl status firewalld # 或者 firewall-cmd --state 查看状态</span><br></pre></td></tr></table></figure></div><p>接下来介绍<code>firewalld</code>的基本概念和操作。</p><hr><h2 id="认识firewalld"><a href="#认识firewalld" class="headerlink" title="认识firewalld"></a>认识<code>firewalld</code></h2><p><code>firewalld</code>使用<strong>区域</strong>和<strong>服务</strong>的概念。基于区域和服务，能够允许或阻止进入或流出系统的网络流量。</p><h3 id="区域-zone"><a href="#区域-zone" class="headerlink" title="区域(zone)"></a>区域(zone)</h3><p>区域是预定义的规则集，指定您的计算机所连接的网络的信任级别。<strong>可以将网卡接口(Interfaces)和源地址(Sources)分配到区域，这也是激活区域的方法。</strong></p><p>可以通过以下命令来查看所有的区域：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-zones</span></span><br><span class="line"><span class="meta">#</span><span class="bash">或者</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ls -l /usr/lib/firewalld/zones/</span></span><br></pre></td></tr></table></figure></div><p>下面是<code>firewalld</code>提供的区域，它们根据区域的信任级别从不可信到可信排序：</p><table><thead><tr><th>区域</th><th align="left">描述</th></tr></thead><tbody><tr><td><strong>drop</strong></td><td align="left">任何传入的网络连接都被丢弃，并且没有任何通知（发送方无法感知）。仅能有发送出去的网络连接。</td></tr><tr><td><strong>block</strong></td><td align="left">任何接收的网络连接都被 IPv4 的 <code>icmp-host-prohibited</code> 信息和 IPv6 的 <code>icmp6-adm-prohibited</code> 信息所拒绝（发送方可感知），即拒绝所有网络连接，但是您可以允许选定的传入连接。</td></tr><tr><td><strong>public</strong></td><td align="left">供不受信任的公众地方使用。仅接受ssh或dhcpv6-client等服务连接（仅仅接收经过选择的连接）。<strong>这个也是默认设置的区域</strong>。</td></tr><tr><td><strong>external</strong></td><td align="left">用于在系统充当网关或路由器时并启用了NAT伪装的外部网络，出去的ipv4网络连接通过此区域伪装和转发，仅仅接收经过选择的连接。</td></tr><tr><td><strong>internal</strong></td><td align="left">用于在系统充当网关或路由器时的内部网络。网络上的其他系统通常是受信任的。仅允许选择的传入连接。</td></tr><tr><td><strong>dmz</strong></td><td align="left">经典的非军事区(DMZ)区域，提供对LAN的有限访问，仅接受ssh服务接连（仅仅接收经过选择的连接）。</td></tr><tr><td><strong>work</strong></td><td align="left">用于工作机器。网络上的其他计算机通常是可信的。仅接受ssh、ipp-client或dhcpv6-client服务连接 （仅仅接收经过选择的连接）。</td></tr><tr><td><strong>home</strong></td><td align="left">用于家用机器。网络上的其他计算机通常是可信的。仅接受ssh、mdns、ipp-client、samba-client、或dhcpv6-client服务连接（仅仅接收经过选择的连接）。</td></tr><tr><td><strong>trusted</strong></td><td align="left">接受所有网络连接。信任网络中的所有计算机。</td></tr></tbody></table><p>需要注意的是，block会明确拒绝掉数据包，而drop会选择丢弃掉数据包。因此，drop比较节省服务器资源；block会回应，比较占用资源。区域的规则不是固定的，用户可以根据自身的需求定制。</p><h3 id="服务-service"><a href="#服务-service" class="headerlink" title="服务(service)"></a>服务(service)</h3><p>服务只是本地端口、协议、源端口、目的地和防火墙帮助模块的列表，例如：</p><ul><li>Port – 443 or 25 or 110</li><li>Service – SSH, HTTP</li><li>Protocols – ICMP</li></ul><p>除了以上两个基本概念还有一些其他的配置项要注意：</p><h3 id="运行时和永久设置"><a href="#运行时和永久设置" class="headerlink" title="运行时和永久设置"></a>运行时和永久设置</h3><p><code>firewalld</code>使用两个独立的配置集，即运行时配置和永久配置。</p><p>运行时配置是实际运行的配置，在重新启动后不再生效。当<code>firewalld</code>守护进程启动时，它将加载永久配置，该配置将成为运行时配置。</p><p>在<code>firewalld-cmd</code>执行的命令中，如果是规则相关的，加上<code>--permanent</code>参数不会立即生效，只会被记录到配置文件。如果要生效需要调用<code>firewall-cmd --reload</code>重新加载；如果不加<code>--permanent</code>则是立即生效，但如果重新加载会被清掉。</p><p>此外，在<code>firewall-cmd</code>命令中有些命令需要必须加<code>--permanent</code>参数，比如<code>--set-target</code>。</p><p>要在两个配置集中应用更改，您可以使用以下两种方法之一:</p><ol><li>更改运行时配置并使其永久:</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd &lt;options&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --runtime-to-permanent <span class="comment"># 将之前做的更改永久化</span></span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>更改永久配置并重新加载<code>firewalld</code>守护进程:</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --permanent &lt;options&gt; </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --reload <span class="comment"># 永久配置重启生效</span></span></span><br></pre></td></tr></table></figure></div><h3 id="区域里包含的基本信息"><a href="#区域里包含的基本信息" class="headerlink" title="区域里包含的基本信息"></a>区域里包含的基本信息</h3><p>当查询某区域的信息时：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=work --list-all</span></span><br></pre></td></tr></table></figure></div><p>输出信息：</p><a href="/img/loading.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:90%" data-src="https://i.loli.net/2020/03/09/zvYksrayhmc1Q56.png" src="/img/loading.gif" class="lazyload"></a><ul><li><code>target:default</code> 区域放行策略。它决定了与该区域匹配，但是没有由这里的设置中显式处理的数据包的动作，可结合<a href="#jump">匹配的优先级</a>来理解。它有四个值：<ul><li><code>ACCEPT</code>：通过这个包。</li><li><code>%%REJECT%%</code>：拒绝这个包，并返回一个拒绝的回复。</li><li><code>DROP</code>：丢弃这个包，不回复任何信息。</li><li><code>default</code>：不做任何事情。该区域不再管它，把它踢到“楼上”。</li></ul></li><li><code>icmp-block-inversion</code> 这个是一个禁ping的参数，默认关闭</li><li><code>work (active)</code> active表示该区域是活动的，因为，它至少有一个接口或源分配给它。再次注意，<strong>将网卡接口和源分配到区域上将激活区域。</strong></li><li><code>interfaces: docker0</code> （网卡接口）是系统中的硬件和虚拟的网络适配器的名字，所有的活动的接口都将被分配到区域，要么是默认的区域，要么是用户指定的一个区域。但是，<strong>一个接口不能被分配给多于一个的区域</strong>。</li><li><code>sources:</code> 列出了分配到这个区域的源，可以是ip地址也可以是ip地址段。<strong>一个源（或重叠的源）不能被分配到多个区域</strong>。这样做的结果是产生一个未定义的行为，因为不清楚应该将哪些规则应用于该源。</li><li><code>services: dockpit dhcpv6-client ssh</code> 列出了允许通过这个防火墙的服务。你可以通过运行 <code>firewall-cmd --get-services</code> 得到一个防火墙预定义服务的详细列表。</li><li><code>ports:</code> 列出了一个允许通过这个防火墙的目标端口。它是用于你需要去允许一个没有在 <code>firewalld</code> 中定义的服务的情况下。</li><li><code>protocal</code>当前 Zone 开启的协议。通过 <code>/etc/protocols</code> 可以查看，常用的协议包括 <code>tcp</code>, <code>udp</code>等。</li><li><code>masquerade: no</code> 表示这个区域是否允许 IP 伪装。如果允许，它将允许 IP 转发，它可以让你的计算机作为一个路由器。</li><li><code>forward-ports:</code> 列出转发的端口。</li><li><code>icmp-blocks:</code> 可添加ICMP类型，当<code>icmp-block-inversion</code>为no时，这些ICMP类型被拒绝；当<code>icmp-block-inversion</code>为yes时，这些ICMP类型被允许。</li><li><code>rich rules:</code> 富规则，即更细致、更详细的防火墙规则策略，它的优先级在所有的防火墙策略中也是最高的。</li></ul><h3 id="匹配的优先级（包处理流程）"><a href="#匹配的优先级（包处理流程）" class="headerlink" title="匹配的优先级（包处理流程）"></a><span id="jump">匹配的优先级（包处理流程）</span></h3><p>因为指定一个源不是必需的，任何包都可以通过接口匹配而归属于一个区域，而不需要通过源匹配来归属一个区域。活动区域中扮演两个不同的角色。关联接口行为的区域作为接口区域，并且，关联源行为的区域作为源区域（一个区域能够扮演两个角色）。<code>firewalld</code> 按下列顺序处理一个包：</p><ol><li>如果匹配到 source 的 Zone（可以存在零个或一个这样的区域）。如果这个包满足一个<strong>富规则rich rule、服务是白名单中的、target 不是 default</strong>，那么源区域处理这个包，并且在这里结束。否则，向上传递这个包。</li><li>如果匹配到 interface 的 Zone（肯定有一个这样的区域）。如果该Zone能处理这个包，那么到这里结束。否则，向上传递这个包。</li><li>若网络接口未关联到特定的区域，则使用默认区域并执行该区域所指定的规则。</li></ol><p>这里的关键信息是，源区域优先于接口区域。因此，一般多区域的设计模式是：先创建一个 source Zone 允许特殊 IP 地址访问系统服务，再通过 interface Zone 来对其他的访问做限制。</p><p>包处理流程的例子：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=home --add-source=192.168.1.1/24</span></span><br></pre></td></tr></table></figure></div><p>当IP为 <code>192.168.1.2</code> 的数据包访问 <code>http</code> 服务时，将会首先匹配到 home Zone，<code>firewall-cmd --zone=home --list-all</code> 查看发现 <code>http</code> 服务没有开启，target 为 default，所以会被丢到上一层；这里假设 <code>192.168.1.1</code> 属于 <code>enp0s8</code> 网卡，那么将会匹配到 drop Zone，target 为 DROP，所以会将包直接丢弃。</p><h2 id="在firewalld上的操作"><a href="#在firewalld上的操作" class="headerlink" title="在firewalld上的操作"></a>在<code>firewalld</code>上的操作</h2><hr><h3 id="默认的zone"><a href="#默认的zone" class="headerlink" title="默认的zone"></a>默认的zone</h3><p>所谓默认的zone，就是在你没有使用<code>--zone</code>参数指定zone时，所有操作默认使用的zone，<strong>同时也在包处理流程中的默认zone</strong>。</p><p>获取默认的zone:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-default-zone <span class="comment"># 如果没做过配置，默认的应该为public</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-active-zones <span class="comment"># 查看活动中的zone</span></span></span><br></pre></td></tr></table></figure></div><p>当向<code>NetworkManager</code>添加新接口连接(例如eth0或ens3)时，它们被附加到默认的zone。查看网卡接口：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ip link show</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nmcli device status</span></span><br></pre></td></tr></table></figure></div><p>改变默认的zone:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --<span class="built_in">set</span>-default-zone=[zone]</span></span><br></pre></td></tr></table></figure></div><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="查看具体zone的信息"><a href="#查看具体zone的信息" class="headerlink" title="查看具体zone的信息"></a>查看具体zone的信息</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --list-all <span class="comment"># 下面是命令输出，对于每一项都可以单独设置</span></span></span><br></pre></td></tr></table></figure></div><p><strong>活动中的zone</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-active-zones <span class="comment"># 这个命令会返回所有绑定了source、interface以及默认的zone，并会说明在什么情况下使用。</span></span></span><br></pre></td></tr></table></figure></div><p><strong>查看所有zone的信息</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --list-all-zones <span class="comment"># 查看所有zone的详细信息，这是个很长的列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-zones <span class="comment"># 查看可用的zone</span></span></span><br></pre></td></tr></table></figure></div><h4 id="设置zone上的规则"><a href="#设置zone上的规则" class="headerlink" title="设置zone上的规则"></a>设置zone上的规则</h4><h5 id="目标设置-target"><a href="#目标设置-target" class="headerlink" title="目标设置(target)"></a>目标设置(target)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --permanent --get-target <span class="comment"># 这里的 --permanent 不能省略</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --permanent --<span class="built_in">set</span>-target=[target] <span class="comment"># 值有default,ACCEPT,REJECT和DROP，这里的 --permanent 不能省略</span></span></span><br></pre></td></tr></table></figure></div><h5 id="端口设置-ports"><a href="#端口设置-ports" class="headerlink" title="端口设置(ports)"></a>端口设置(ports)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --add-port=8080/tcp <span class="comment"># 放行tcp访问的8080端口,协议有tcp/udp/sctp/dccp</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --add-port=8080-9090/tcp <span class="comment"># 一串端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --list-ports <span class="comment"># 查看端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --query-port=8080/tcp <span class="comment"># 查看指定zone的指定端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --remove-port=8080/tcp <span class="comment"># 移除端口</span></span></span><br></pre></td></tr></table></figure></div><h5 id="源设置-sources"><a href="#源设置-sources" class="headerlink" title="源设置(sources)"></a>源设置(sources)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --add-source=192.168.1.10/24 <span class="comment"># 绑定源到区域</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --list-sources <span class="comment"># 查看区域所绑定源的列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd  --zone=[zone] --query-source=192.168.1.10/24 <span class="comment"># 查看指定zone是否和指定源绑定</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-zone-of-source=192.168.1.10/24 <span class="comment"># 通过源查询绑定的区域</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd  --zone=[zone] --change-source=192.168.1.10/24 <span class="comment"># 用于改变source地址所绑定的zone，如果原来没有绑定则进行绑定</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --remove-source=192.168.1.10/24 <span class="comment"># 解除源的绑定</span></span></span><br></pre></td></tr></table></figure></div><h5 id="网卡接口-interfaces"><a href="#网卡接口-interfaces" class="headerlink" title="网卡接口(interfaces)"></a>网卡接口(interfaces)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --add-interface=[interface] <span class="comment"># 添加指定 interface 到指定的 Zone</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --change-interface=[interface] <span class="comment"># 将eth1接口分配给work区域</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --remove-interface=[interface] <span class="comment"># 删除work上的eth1接口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=[zone] --list-interfaces <span class="comment"># 查看指定 Zone 下的 interfaces</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-zone-of-interface=[interface] <span class="comment"># 通过接口查询绑定的区域</span></span></span><br></pre></td></tr></table></figure></div><h5 id="端口转发-forward-ports"><a href="#端口转发-forward-ports" class="headerlink" title="端口转发(forward-ports)"></a>端口转发(forward-ports)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=external --add-forward-port=port=80:proto=tcp:toport=8080 <span class="comment"># 同一主机上的端口转发</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=external --add-forward-port=port=80:proto=tcp:toaddr=10.10.10.2 <span class="comment"># 从80端口转发到10.10.10.2的80端口(默认端口)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=external --add-forward-port=port=80:proto=tcp:toport=8080:toaddr=10.10.10.2 <span class="comment"># 从80端口转发到10.10.10.2的8080端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=external --remove-forward-port=port=80:proto=tcp:toport=8080:toaddr=10.10.10.2 <span class="comment"># 删除上一条的端口转发</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 伪装 ###</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-masquerade <span class="comment"># 如果需要将流量(端口443)转发到lxd服务器/容器托管，请打开伪装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-forward-port=port=443:proto=tcp:toport=443:toaddr=192.168.2.42</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --remove-masquerade <span class="comment"># 删除上面设置的伪装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --remove-forward-port=port=443:proto=tcp:toport=443:toaddr=192.168.2.42</span></span><br></pre></td></tr></table></figure></div><h5 id="服务-services"><a href="#服务-services" class="headerlink" title="服务(services)"></a>服务(services)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-service=http <span class="comment"># 增加服务</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --list-services <span class="comment"># 列出服务</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --remove-service=http <span class="comment"># 移除服务</span></span></span><br></pre></td></tr></table></figure></div><h5 id="协议-protocals"><a href="#协议-protocals" class="headerlink" title="协议(protocals)"></a>协议(protocals)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --add-protocol=&lt;protocol&gt; <span class="comment"># 允许协议 (例：icmp，即允许ping)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --remove-protocol=&lt;protocol&gt; <span class="comment"># 取消协议</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --list-protocols <span class="comment"># 查看允许的协议</span></span></span><br></pre></td></tr></table></figure></div><h5 id="高级规则-rich-rules"><a href="#高级规则-rich-rules" class="headerlink" title="高级规则(rich rules)"></a>高级规则(rich rules)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;区域里的富规则按先后顺序匹配，按先匹配到的规则生效。#firewall-cmd ↓</span><br><span class="line">--add-rich-rule&#x3D;&#39;&lt;RULE&gt;&#39;    &#x2F;&#x2F;在指定的区添加一条富规则</span><br><span class="line">--remove-rich-rule&#x3D;&#39;&lt;RULE&gt;&#39; &#x2F;&#x2F;在指定的区删除一条富规则</span><br><span class="line">--query-rich-rule&#x3D;&#39;&lt;RULE&gt;&#39;  &#x2F;&#x2F;找到规则返回0 ，找不到返回1</span><br><span class="line">--list-rich-rules       &#x2F;&#x2F;列出指定区里的所有富规则</span><br><span class="line">--list-all 和 --list-all-zones 也能列出存在的富规则</span><br><span class="line"></span><br><span class="line">[rich-rule]有一套完整的 rich-rule-language:</span><br><span class="line">rule</span><br><span class="line">  [family&#x3D;&quot;ipv4|ipv6&quot;]</span><br><span class="line">  [source address&#x3D;&quot;address[&#x2F;mask]&quot;|mac&#x3D;&quot;mac-address&quot;|ipset&#x3D;&quot;ipset&quot;]</span><br><span class="line">  [destination address&#x3D;&quot;address[&#x2F;mask]&quot;]</span><br><span class="line">  service|port|protocol|icmp-block|icmp-type|masquerade|forward-port|source-port</span><br><span class="line">  [log]</span><br><span class="line">  [audit]</span><br><span class="line">  [accept|reject|drop|mark]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.2.1<span class="string">" accept"</span> <span class="comment"># accept表示接受，reject表示拒绝，drop表示直接丢弃，这条命令表示允许来自192.168.2.1的所有流量</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.2.208<span class="string">" service name="</span>ssh<span class="string">" accept"</span> <span class="comment"># 允许192.168.2.208主机访问ssh服务</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.2.1<span class="string">" port protocol="</span>tcp<span class="string">" port="</span>22<span class="string">" accept"</span> <span class="comment"># 允许192.168.2.1主机访问22端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=drop --add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.2.0/24<span class="string">" port protocol="</span>tcp<span class="string">" port="</span>22<span class="string">" reject"</span> <span class="comment"># 表示禁止192.168.2.0/24网段的主机访问22端口</span></span></span><br></pre></td></tr></table></figure></div><h5 id="应急命令"><a href="#应急命令" class="headerlink" title="应急命令"></a>应急命令</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --panic-on  <span class="comment"># 拒绝所有流量，远程连接会立即断开，只有本地能登陆</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --panic-off  <span class="comment"># 取消应急模式，但需要重启firewalld后才可以远程ssh</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --query-panic  <span class="comment"># 查看是否为应急模式</span></span></span><br></pre></td></tr></table></figure></div><h5 id="超时-timeout"><a href="#超时-timeout" class="headerlink" title="超时(timeout)"></a>超时(timeout)</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-service=ssh --timeout=5m <span class="comment"># 个timeout 选项是一个以秒（s）、分（m）或小时（h）为单位的时间值,表示该配置有效时间</span></span></span><br></pre></td></tr></table></figure></div><p>还有许多的规则配置就不一一列举了，需要时去查相关的命令即可。</p><p><strong>注意</strong>，以上配置都是运行时配置，如果需要使其永久生效在命令行后边加上<code>--permanent</code>选项然后重新加载，<strong>或者</strong>使用命令</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --runtime-to-permanent</span></span><br></pre></td></tr></table></figure></div><p>也可以自定义自己的zone和service，见后文。</p><h5 id="创建自定义的zone"><a href="#创建自定义的zone" class="headerlink" title="创建自定义的zone"></a>创建自定义的zone</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --new-zone=memcached --permanent <span class="comment"># 创建zone</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=memcached --add-port=11211/udp --permanent <span class="comment"># 添加规则</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=memcached --add-source=192.168.100.30/32 --permanent <span class="comment">#同上</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --reload <span class="comment"># 重新加载生效</span></span></span><br></pre></td></tr></table></figure></div><h4 id="服务设置"><a href="#服务设置" class="headerlink" title="服务设置"></a>服务设置</h4><h5 id="获取所有可用服务的列表"><a href="#获取所有可用服务的列表" class="headerlink" title="获取所有可用服务的列表"></a>获取所有可用服务的列表</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-services</span></span><br></pre></td></tr></table></figure></div><p>通过在<code>/usr/lib/firewalld/services</code>目录中打开相关的.xml文件，您可以找到关于每个服务的更多信息。例如，HTTP服务的定义如下:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short</span>&gt;</span>WWW (HTTP)<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>HTTP is the protocol used to serve Web pages. If you plan to make your Web server publicly available, enable this option. This option is not required for viewing pages locally or developing Web pages.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"80"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>为public区域中的接口允许传入HTTP通信流(端口80)，仅为当前会话(运行时配置)类型：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-service=http</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --list-services <span class="comment"># 查看</span></span></span><br></pre></td></tr></table></figure></div><p>移除</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --remove-service=http</span></span><br></pre></td></tr></table></figure></div><h5 id="自定义服务"><a href="#自定义服务" class="headerlink" title="自定义服务"></a>自定义服务</h5><p>如前所述，默认服务存储在<code>/usr/lib/firewalld/services</code>目录中。创建新服务的最简单方法是将现有的服务文件复制到<code>/etc/firewalld/services</code>目录，该目录是用户创建服务的位置，并修改文件设置。我们创建的<code>/etc/firewalld/services/plexmediaserver.xml</code>如下的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short</span>&gt;</span>plexmediaserver<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Plex is a streaming media server that brings all your video, music and photo collections together and stream them to your devices at anytime and from anywhere.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"1900"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"32400"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>重新加载生效</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></div><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>其实到这里，我遇到的问题就可以迎刃而解了。</p><h3 id="1-放行整个区域"><a href="#1-放行整个区域" class="headerlink" title="1. 放行整个区域"></a>1. 放行整个区域</h3><p>首先查看网卡接口和区域设置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ip link show</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --get-active-zone</span></span><br><span class="line">public</span><br><span class="line">  interfaces: docker0 eth0</span><br></pre></td></tr></table></figure></div><p>根据<a href="#jump">包处理流程</a>，由于没有源的分配，匹配到 interface 的 Zone，外网访问docker容器服务的时候会匹配到public区域，target是default，于是采用firewall默认行为。所以只要将default设置为ACCEPT便可访问。下面是我的操作,你也可以设置自己的策略。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --<span class="built_in">set</span>-default-zone=work <span class="comment"># 设置默认区域为work</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --change-interface=docker0 <span class="comment"># 将docker0接口分配到work区域</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --permanent --<span class="built_in">set</span>-target=ACCEPT <span class="comment"># 将target设置为ACCEPT</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --runtime-to-permanent <span class="comment"># 设置永久生效</span></span></span><br></pre></td></tr></table></figure></div><h3 id="2-放行源地址"><a href="#2-放行源地址" class="headerlink" title="2. 放行源地址"></a>2. 放行源地址</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=home --add-source=192.168.1.1/24 --permanent</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --permanent --<span class="built_in">set</span>-target=ACCEPT --zone=home</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></div><h3 id="3-docker容器内dns问题"><a href="#3-docker容器内dns问题" class="headerlink" title="3. docker容器内dns问题"></a>3. docker容器内dns问题</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> firewall-cmd --zone=public --add-masquerade --permanent &amp;&amp; firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></div><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://firewalld.org/documentation/concepts.html" target="_blank" rel="noopener">https://firewalld.org/documentation/concepts.html</a><br><a href="http://www.solves.com.cn/it/aq/rj/2019-11-21/8339.html" target="_blank" rel="noopener">http://www.solves.com.cn/it/aq/rj/2019-11-21/8339.html</a><br><a href="https://www.cnblogs.com/meizy/p/firewall_history_and_firewall_learning.html" target="_blank" rel="noopener">https://www.cnblogs.com/meizy/p/firewall_history_and_firewall_learning.html</a><br><a href="https://www.toutiao.com/i6243332343981933058/" target="_blank" rel="noopener">https://www.toutiao.com/i6243332343981933058/</a><br><a href="https://zhuanlan.zhihu.com/p/31309295" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/31309295</a><br><a href="https://linotes.imliloli.com/tools/firewalld/" target="_blank" rel="noopener">https://linotes.imliloli.com/tools/firewalld/</a><br><a href="https://linuxize.com/post/how-to-configure-and-manage-firewall-on-centos-8/" target="_blank" rel="noopener">https://linuxize.com/post/how-to-configure-and-manage-firewall-on-centos-8/</a><br><a href="https://www.cyberciti.biz/faq/how-to-set-up-a-firewall-using-firewalld-on-centos-8/" target="_blank" rel="noopener">https://www.cyberciti.biz/faq/how-to-set-up-a-firewall-using-firewalld-on-centos-8/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用操作</title>
      <link href="/2020/03/03/common-operation/"/>
      <url>/2020/03/03/common-operation/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本文列举了一些常用的操作，供查阅使用</p></blockquote><h1 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h1><h3 id="1-查看linux内核信息"><a href="#1-查看linux内核信息" class="headerlink" title="1. 查看linux内核信息"></a>1. 查看linux内核信息</h3> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> uname -a<span class="comment"># 查看系统内核信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat /proc/version<span class="comment"># 查看内核和GCC信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/redhat-release<span class="comment">#查看发行版本</span></span></span><br></pre></td></tr></table></figure></div><h3 id="2-配置国内yum源"><a href="#2-配置国内yum源" class="headerlink" title="2. 配置国内yum源"></a>2. 配置国内yum源</h3><ol><li><p>首先进入<code>/etc/yum.repos.d/</code>将原来的yum源备份</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/yum.repos.d/ &amp;&amp; mkdir repo_bak &amp;&amp; mv *.repo repo_bak/</span></span><br></pre></td></tr></table></figure></div></li><li><p>在CentOS中配置使用yum源</p><p> <a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener">阿里云官方镜像站</a></p><p><a href="http://mirrors.163.com/.help/" target="_blank" rel="noopener">网易开源镜像站</a></p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help" target="_blank" rel="noopener">中科大开源镜像站</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学开源镜像站</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget http://mirrors.aliyun.com/repo/Centos-8.repo<span class="comment"># 阿里云yum源</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo <span class="comment">#阿里云epel源</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum clean all<span class="comment"># 清除yum缓存</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum makecache<span class="comment"># 生成新的yum缓存</span></span></span><br></pre></td></tr></table></figure></div><p>完成。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello Blog!</title>
      <link href="/2020/02/26/hello-blog/"/>
      <url>/2020/02/26/hello-blog/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一封从远方寄来的信</p></blockquote><p>你好，欢迎来到啓東的部落格 ！</p><hr><p>Hello, welcome to my personal blog site!</p><hr><p>こんにちは、ぼくのブログで新たな冒険を始めましょう！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
